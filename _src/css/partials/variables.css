:root {
  /* Fallback colors (pre `color-mix()` */
  --bgc-body: white;
  --tc-base: #222;
  --tc-link: #4162e3;
  --tc-link-hover: #344fb6;
  --focus-ring: #9BAFF9;
  --tc-input: black;
  --bgc-input: #f5f5f5;
  --tc-btn: white;
  --tc-btn-hover: white;
  --bgc-btn: #808080;
  --bgc-btn-hover: #707070;
  --tc-code: black;
  --bgc-code: #e0e0e0;
  --bgc-highlight: #ffcc0066;
  --bc-fineline: #d9d9d9;

  /* Theme base colors */
  --blue: #3b6cff;
  --green: #01b236;
  --amber: #f0b300;
  --red: #f80200;
  --gray: #767676;

  /* Light theme colors */
  --tc-base: color-mix(in srgb, var(--gray) calc((100% - var(--l900)) * 2), black);
  --tc-link: color-mix(in srgb, var(--blue) calc((100% - var(--l600)) * 2), black);
  --tc-link-hover: color-mix(in srgb, var(--blue) calc((100% - var(--l800)) * 2), black);
  --focus-ring: color-mix(in srgb, var(--blue) calc(var(--l300) * 2), white);
  --tc-input: black;
  --bgc-input: #f5f5f5;
  --tc-btn: white;
  --tc-btn-hover: white;
  --bgc-btn: color-mix(in srgb, var(--gray) calc((100% - var(--l500)) * 2), white);
  --bgc-btn-hover: color-mix(in srgb, var(--gray) calc((100% - var(--l600)) * 2), black);
  --tc-code: black;
  --bgc-code: color-mix(in srgb, var(--gray) calc(var(--l200) * 2), white);
  --bgc-highlight: #ffcc0066;
  --bc-fineline: color-mix(in srgb, var(--gray) calc(var(--l200) * 2), white);
}

* {
  /* Color shades; increments: 10% */
  --l100: 5%;
  --l200: 15%;
  --l300: 25%;
  --l400: 35%;
  --l500: 45%;
  --l600: 55%;
  --l700: 65%;
  --l800: 75%;
  --l900: 85%;
  --l1000: 95%;
}

/* Dark theme; increments: 8% */
.theme-dark,
.theme-dark * {
  --l100: 22%;
  --l200: 30%;
  --l300: 38%;
  --l400: 46%;
  --l500: 54%;
  --l600: 62%;
  --l700: 70%;
  --l800: 78%;
  --l900: 86%;
  --l1000: 94%
}

.theme-dark .b-dark-invert,
.theme-dark .t-dark-invert,
.theme-dark .bg-dark-invert {
  --l100: 86%;
  --l200: 78%;
  --l300: 70%;
  --l400: 62%;
  --l500: 54%;
  --l600: 46%;
  --l700: 38%;
  --l800: 30%;
  --l900: 22%;
}

.theme-dark {
  --bgc-body: color-mix(in srgb, var(--gray) calc((100% - var(--l1000)) * 2), black);
  --tc-base: color-mix(in srgb, var(--gray) calc(var(--l100) * 2), white);
  --tc-link: color-mix(in srgb, var(--blue) calc(var(--l400) * 2), white);
  --tc-link-lighter: color-mix(in srgb, var(--blue) calc(var(--l300) * 2), white);
  --tc-link-darker: color-mix(in srgb, var(--blue) calc(var(--l500) * 2), white);
  --tc-link-hover: var(--tc-link-lighter);
  --focus-ring: color-mix(in srgb, var(--blue) calc((100% - var(--l600)) * 2), black);
  --tc-input: white;
  --bgc-input: color-mix(in srgb, var(--gray) calc((100% - var(--l900)) * 2), black);
  --bgc-btn: color-mix(in srgb, var(--gray) calc((100% - var(--l600)) * 2), black);
  --bgc-btn-lighter: color-mix(in srgb, var(--gray) calc((100% - var(--l500)) * 2), white);
  --bgc-btn-darker: color-mix(in srgb, var(--gray) calc((100% - var(--l700)) * 2), black);
  --bgc-btn-hover: var(--bgc-btn-lighter);
  --tc-code: white;
  --bgc-code: color-mix(in srgb, var(--gray) calc((100% - var(--l800)) * 2), black);
  --bc-fineline: color-mix(in srgb, var(--gray) calc((100% - var(--l700)) * 2), black);
}

:root {
  /* Native Typeface Stacks */
  --t-sans: ui-sans-serif, system-ui, sans-serif;
  --t-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  --t-mono: ui-monospace, Menlo, Consolas, "Courier New", monospace;

  /* Alternative serif font stack (not used anywhere) */
  --t-old-serif: "Iowan Old Style", "Palatino Linotype", Palatino, Georgia, serif;

  --t-base: var(--t-sans);
  --t-prose: var(--t-serif);

  /* Base font size */
  --fs-base: 100%;
  /* Base line-height (no unit required) */
  --lh-base: 1.5;
  /* margin line-height in rems */
  --m-lh: calc(var(--lh-base) * 1rem);

  --t-small: .8em;
  --t-big: 1.25em;

  /* Font weights */
  --fw-lighter: 200;
  --fw-normal: 400;
  --fw-semibold: 500;
  --fw-bold: 700;
  --fw-heavy: 900;

  /*
  Widths set at 320px intervals
  Same as `@media` and `@container` min-widths
  */
  --w-xs: 320px;
  --w-sm: 640px;
  --w-md: 960px;
  --w-lg: 1280px;
  --w-xl: 1600px;

  /*
  Content grid
  ============
  Default content becomes max width 640px when font-size is 16px (1rem)
  Expand panels becomes max width 960px when font-size is 16px (1rem)
  */
  --w-cg: 40em;
  --w-expand: 8.5em;

  /*
  Spacing
  =======
  Used for margins, paddings, flexbox gaps, and grid gaps. Notes:
  * `--sp-2` through `--sp-4` clamps are based on https://clamp.font-size.app/,
    expanding each to 1.5× of initial value from 640px to 1280px.
  * `--sp-2` through `--sp-4` involve viewport widths (vw) or container widths (cqi)
    depending on context. See also “container query powered variables” below.
  */
  --sp-1: 0.5rem;
  --sp-2: clamp(1rem, 0.5rem + 1.25vw, 1.5rem);
  --sp-3: clamp(2rem, 1rem + 2.5vw, 3rem);
  --sp-4: clamp(3rem, 1.5rem + 3.75vw, 4.5rem);
  /* table cells, form inputs, and similar utility class */
  --p-cell: var(--sp-1) calc(2 * var(--sp-1));
  /* list spacing (between items) */
  --sp-list: 0.75em;

  /* 
  Major third typographic scale
  =============================
  Salculated by https://type-scale.com
  Set heading sizes using ems, so that all headings can be `clamp()`
  enlarged by wrapping with `.t-long-read` 
  */
  --h1: 2.441em;
  --h2: 1.953em;
  --h3: 1.563em;
  --h4: 1.25em;
  --h5: 1em;
  --h6: .8em;
  /* headings font */
  --h-font: inherit;
  /* headings font-weight */
  --h-fw: var(--fw-bold);
  /* headings line-height */
  --h-lh: calc(1em + 0.5rem);

  /*
  Long-read utility
  See also “container query powered variables” below.
  */
  --fs-long-read: clamp(1rem, 0.625rem + 0.9375vw, 1.375rem);
  ;

  /* link decoration offset */
  --d-off-link: .3rem;
  /* link decoration thickness */
  --d-thick-link: 1px;
  /* input and button height */
  --h-input: 2.5em;
  /* button font-weight */
  --fw-btn: var(--fw-semibold);

  /* Borders */
  --b-1: 1px solid var(--bc-fineline);
  --b-2: 4px solid var(--bc-fineline);
  --b-3: 8px solid var(--bc-fineline);

  /* Border radius (rounded corners) */
  --r-2: 4px;
  --r-3: 8px;
  --r-4: 16px;
}

/* Container query powered variables */
.container {
  /* No need for `--sp-1` here, because it’s always 0.5rem */
  --sp-2: clamp(1rem, 0.5rem + 1.25cqi, 1.5rem);
  --sp-3: clamp(2rem, 1rem + 2.5cqi, 3rem);
  --sp-4: clamp(3rem, 1.5rem + 3.75cqi, 4.5rem);

  --fs-long-read: clamp(1rem, 0.625rem + 0.9375cqi, 1.375rem);
  ;
}